{"ast":null,"code":"import axios from 'axios';\nimport API_BASE from '../api';\nconst base = `${API_BASE}/templates`;\nexport async function getTemplates() {\n  const res = await axios.get(base);\n  return res.data;\n}\nexport async function uploadTemplates(formData, config = {}) {\n  // formData is expected to be FormData with fields: identitas, nilai, sikap, surat_keluar\n  const isForm = typeof FormData !== 'undefined' && formData instanceof FormData;\n  const headers = isForm ? {\n    ...(config.headers || {})\n  } : {\n    'Content-Type': 'application/json',\n    ...(config.headers || {})\n  };\n  const res = await axios.post(`${base}/upload`, formData, {\n    headers,\n    ...config\n  });\n  return res.data;\n}\nexport async function deleteTemplate(fileName) {\n  const res = await axios.delete(`${base}/${encodeURIComponent(fileName)}`);\n  return res.data;\n}\nexport async function generateRaport(siswaId, semester, tahunAjaranOrId) {\n  // Accept either numeric tahunAjaranId (preferred) or legacy textual tahun_ajaran\n  const isId = typeof tahunAjaranOrId === 'number' || !isNaN(Number(tahunAjaranOrId)) && String(tahunAjaranOrId).trim() !== '';\n  const segment = isId ? `${tahunAjaranOrId}` : encodeURIComponent(String(tahunAjaranOrId || ''));\n  // prefer id-based route if caller passed a numeric id; fall back to legacy textual route\n  const url = isId ? `${base}/generate/${siswaId}/${segment}/${semester}` : `${base}/generate/${siswaId}/${semester}/${segment}`;\n  const res = await axios.get(url, {\n    responseType: 'blob'\n  });\n  return res.data;\n}\nexport async function generateIdentitas(siswaId, format = 'docx') {\n  const res = await axios.get(`${base}/generate-identitas/${siswaId}`, {\n    params: {\n      format\n    },\n    responseType: 'blob'\n  });\n  return res.data;\n}\nexport default {\n  getTemplates,\n  uploadTemplates,\n  deleteTemplate,\n  generateRaport,\n  generateIdentitas\n};","map":{"version":3,"names":["axios","API_BASE","base","getTemplates","res","get","data","uploadTemplates","formData","config","isForm","FormData","headers","post","deleteTemplate","fileName","delete","encodeURIComponent","generateRaport","siswaId","semester","tahunAjaranOrId","isId","isNaN","Number","String","trim","segment","url","responseType","generateIdentitas","format","params"],"sources":["C:/laragon/www/E-RAPORT-NUURUSH-SHOLAAH/e-raport-client/src/services/templateService.js"],"sourcesContent":["import axios from 'axios'\r\nimport API_BASE from '../api'\r\n\r\nconst base = `${API_BASE}/templates`\r\n\r\nexport async function getTemplates() { const res = await axios.get(base); return res.data }\r\nexport async function uploadTemplates(formData, config = {}) {\r\n  // formData is expected to be FormData with fields: identitas, nilai, sikap, surat_keluar\r\n  const isForm = typeof FormData !== 'undefined' && formData instanceof FormData\r\n  const headers = isForm ? { ...(config.headers || {}) } : { 'Content-Type': 'application/json', ...(config.headers || {}) }\r\n  const res = await axios.post(`${base}/upload`, formData, { headers, ...config })\r\n  return res.data\r\n}\r\nexport async function deleteTemplate(fileName) { const res = await axios.delete(`${base}/${encodeURIComponent(fileName)}`); return res.data }\r\nexport async function generateRaport(siswaId, semester, tahunAjaranOrId) {\r\n  // Accept either numeric tahunAjaranId (preferred) or legacy textual tahun_ajaran\r\n  const isId = typeof tahunAjaranOrId === 'number' || (!isNaN(Number(tahunAjaranOrId)) && String(tahunAjaranOrId).trim() !== '');\r\n  const segment = isId ? `${tahunAjaranOrId}` : encodeURIComponent(String(tahunAjaranOrId || ''));\r\n  // prefer id-based route if caller passed a numeric id; fall back to legacy textual route\r\n  const url = isId ? `${base}/generate/${siswaId}/${segment}/${semester}` : `${base}/generate/${siswaId}/${semester}/${segment}`;\r\n  const res = await axios.get(url, { responseType: 'blob' });\r\n  return res.data\r\n}\r\nexport async function generateIdentitas(siswaId, format='docx') { const res = await axios.get(`${base}/generate-identitas/${siswaId}`, { params: { format }, responseType: 'blob' }); return res.data }\r\n\r\nexport default { getTemplates, uploadTemplates, deleteTemplate, generateRaport, generateIdentitas }\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,QAAQ;AAE7B,MAAMC,IAAI,GAAG,GAAGD,QAAQ,YAAY;AAEpC,OAAO,eAAeE,YAAYA,CAAA,EAAG;EAAE,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACH,IAAI,CAAC;EAAE,OAAOE,GAAG,CAACE,IAAI;AAAC;AAC1F,OAAO,eAAeC,eAAeA,CAACC,QAAQ,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;EAC3D;EACA,MAAMC,MAAM,GAAG,OAAOC,QAAQ,KAAK,WAAW,IAAIH,QAAQ,YAAYG,QAAQ;EAC9E,MAAMC,OAAO,GAAGF,MAAM,GAAG;IAAE,IAAID,MAAM,CAACG,OAAO,IAAI,CAAC,CAAC;EAAE,CAAC,GAAG;IAAE,cAAc,EAAE,kBAAkB;IAAE,IAAIH,MAAM,CAACG,OAAO,IAAI,CAAC,CAAC;EAAE,CAAC;EAC1H,MAAMR,GAAG,GAAG,MAAMJ,KAAK,CAACa,IAAI,CAAC,GAAGX,IAAI,SAAS,EAAEM,QAAQ,EAAE;IAAEI,OAAO;IAAE,GAAGH;EAAO,CAAC,CAAC;EAChF,OAAOL,GAAG,CAACE,IAAI;AACjB;AACA,OAAO,eAAeQ,cAAcA,CAACC,QAAQ,EAAE;EAAE,MAAMX,GAAG,GAAG,MAAMJ,KAAK,CAACgB,MAAM,CAAC,GAAGd,IAAI,IAAIe,kBAAkB,CAACF,QAAQ,CAAC,EAAE,CAAC;EAAE,OAAOX,GAAG,CAACE,IAAI;AAAC;AAC5I,OAAO,eAAeY,cAAcA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,eAAe,EAAE;EACvE;EACA,MAAMC,IAAI,GAAG,OAAOD,eAAe,KAAK,QAAQ,IAAK,CAACE,KAAK,CAACC,MAAM,CAACH,eAAe,CAAC,CAAC,IAAII,MAAM,CAACJ,eAAe,CAAC,CAACK,IAAI,CAAC,CAAC,KAAK,EAAG;EAC9H,MAAMC,OAAO,GAAGL,IAAI,GAAG,GAAGD,eAAe,EAAE,GAAGJ,kBAAkB,CAACQ,MAAM,CAACJ,eAAe,IAAI,EAAE,CAAC,CAAC;EAC/F;EACA,MAAMO,GAAG,GAAGN,IAAI,GAAG,GAAGpB,IAAI,aAAaiB,OAAO,IAAIQ,OAAO,IAAIP,QAAQ,EAAE,GAAG,GAAGlB,IAAI,aAAaiB,OAAO,IAAIC,QAAQ,IAAIO,OAAO,EAAE;EAC9H,MAAMvB,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACuB,GAAG,EAAE;IAAEC,YAAY,EAAE;EAAO,CAAC,CAAC;EAC1D,OAAOzB,GAAG,CAACE,IAAI;AACjB;AACA,OAAO,eAAewB,iBAAiBA,CAACX,OAAO,EAAEY,MAAM,GAAC,MAAM,EAAE;EAAE,MAAM3B,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGH,IAAI,uBAAuBiB,OAAO,EAAE,EAAE;IAAEa,MAAM,EAAE;MAAED;IAAO,CAAC;IAAEF,YAAY,EAAE;EAAO,CAAC,CAAC;EAAE,OAAOzB,GAAG,CAACE,IAAI;AAAC;AAEtM,eAAe;EAAEH,YAAY;EAAEI,eAAe;EAAEO,cAAc;EAAEI,cAAc;EAAEY;AAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}