{"ast":null,"code":"import apiClient from './apiClient';\nconst base = `/api/tahun-ajaran`;\nconst masterBase = `/api/master-tahun-ajaran`;\nexport async function getAllTahunAjaran(params = {}) {\n  const res = await apiClient.get(base, {\n    params\n  });\n  return res.data;\n}\nexport async function getForPromosi() {\n  const res = await apiClient.get(base, {\n    params: {\n      semester: 2,\n      uniqueByName: true\n    }\n  });\n  return res.data;\n}\nexport async function getForTargetPromosi() {\n  const res = await apiClient.get(base, {\n    params: {\n      semester: 1,\n      uniqueByName: true\n    }\n  });\n  return res.data;\n}\nexport async function getTahunAjaranById(id) {\n  const res = await apiClient.get(`${base}/${id}`);\n  return res.data;\n}\nexport async function getAllMasterTahunAjaran() {\n  const res = await apiClient.get(masterBase);\n  return res.data;\n}\nexport async function getPeriodesForMaster(masterId) {\n  const res = await apiClient.get(base, {\n    params: {\n      master_tahun_ajaran_id: masterId\n    }\n  });\n  return res.data;\n}\nexport async function getSemesterOnePeriode(masterId) {\n  const res = await apiClient.get(base, {\n    params: {\n      master_tahun_ajaran_id: masterId\n    }\n  });\n  const list = res.data || [];\n  // prefer numeric or string '1'\n  const found = list.find(p => String(p.semester) === '1');\n  return found || null;\n}\nexport async function createTahunAjaran(payload) {\n  const res = await apiClient.post(base, payload);\n  return res.data;\n}\nexport async function updateTahunAjaran(id, payload) {\n  const res = await apiClient.put(`${base}/${id}`, payload);\n  return res.data;\n}\nexport async function deleteTahunAjaran(id) {\n  const res = await apiClient.delete(`${base}/${id}`);\n  return res.data;\n}\nexport async function createMasterTahunAjaran(payload) {\n  const res = await apiClient.post(masterBase, payload);\n  return res.data;\n}\nexport async function updateMasterTahunAjaran(id, payload) {\n  const res = await apiClient.put(`${masterBase}/${id}`, payload);\n  return res.data;\n}\nexport async function deleteMasterTahunAjaran(id) {\n  const res = await apiClient.delete(`${masterBase}/${id}`);\n  return res.data;\n}\nexport default {\n  getAllTahunAjaran,\n  getForPromosi,\n  getForTargetPromosi,\n  getTahunAjaranById,\n  getAllMasterTahunAjaran,\n  getPeriodesForMaster,\n  getSemesterOnePeriode,\n  createTahunAjaran,\n  updateTahunAjaran,\n  deleteTahunAjaran,\n  createMasterTahunAjaran,\n  updateMasterTahunAjaran,\n  deleteMasterTahunAjaran\n};","map":{"version":3,"names":["apiClient","base","masterBase","getAllTahunAjaran","params","res","get","data","getForPromosi","semester","uniqueByName","getForTargetPromosi","getTahunAjaranById","id","getAllMasterTahunAjaran","getPeriodesForMaster","masterId","master_tahun_ajaran_id","getSemesterOnePeriode","list","found","find","p","String","createTahunAjaran","payload","post","updateTahunAjaran","put","deleteTahunAjaran","delete","createMasterTahunAjaran","updateMasterTahunAjaran","deleteMasterTahunAjaran"],"sources":["C:/laragon/www/E-RAPORT-NUURUSH-SHOLAAH/e-raport-client/src/services/tahunAjaranService.js"],"sourcesContent":["import apiClient from './apiClient'\r\n\r\nconst base = `/api/tahun-ajaran`\r\nconst masterBase = `/api/master-tahun-ajaran`\r\n\r\nexport async function getAllTahunAjaran(params = {}) { const res = await apiClient.get(base, { params }); return res.data }\r\nexport async function getForPromosi() { const res = await apiClient.get(base, { params: { semester: 2, uniqueByName: true } }); return res.data }\r\nexport async function getForTargetPromosi() { const res = await apiClient.get(base, { params: { semester: 1, uniqueByName: true } }); return res.data }\r\nexport async function getTahunAjaranById(id) { const res = await apiClient.get(`${base}/${id}`); return res.data }\r\nexport async function getAllMasterTahunAjaran() { const res = await apiClient.get(masterBase); return res.data }\r\nexport async function getPeriodesForMaster(masterId) { const res = await apiClient.get(base, { params: { master_tahun_ajaran_id: masterId } }); return res.data }\r\nexport async function getSemesterOnePeriode(masterId) { \r\n\tconst res = await apiClient.get(base, { params: { master_tahun_ajaran_id: masterId } });\r\n\tconst list = res.data || [];\r\n\t// prefer numeric or string '1'\r\n\tconst found = list.find(p => String(p.semester) === '1');\r\n\treturn found || null;\r\n}\r\nexport async function createTahunAjaran(payload) { const res = await apiClient.post(base, payload); return res.data }\r\nexport async function updateTahunAjaran(id, payload) { const res = await apiClient.put(`${base}/${id}`, payload); return res.data }\r\nexport async function deleteTahunAjaran(id) { const res = await apiClient.delete(`${base}/${id}`); return res.data }\r\nexport async function createMasterTahunAjaran(payload) { const res = await apiClient.post(masterBase, payload); return res.data }\r\nexport async function updateMasterTahunAjaran(id, payload) { const res = await apiClient.put(`${masterBase}/${id}`, payload); return res.data }\r\nexport async function deleteMasterTahunAjaran(id) { const res = await apiClient.delete(`${masterBase}/${id}`); return res.data }\r\n\r\nexport default { getAllTahunAjaran, getForPromosi, getForTargetPromosi, getTahunAjaranById, getAllMasterTahunAjaran, getPeriodesForMaster, getSemesterOnePeriode, createTahunAjaran, updateTahunAjaran, deleteTahunAjaran, createMasterTahunAjaran, updateMasterTahunAjaran, deleteMasterTahunAjaran }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}