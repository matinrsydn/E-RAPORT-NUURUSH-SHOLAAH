{"ast":null,"code":"import axios from 'axios';\nimport API_BASE from '../api';\nconst base = `${API_BASE}/surat-keluar`;\n\n// Keep track of ongoing downloads\nconst activeDownloads = new Set();\nexport async function generateFromTemplate(formData) {\n  try {\n    const res = await axios.post(`${base}/generate-from-template`, formData, {\n      responseType: 'blob',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return res;\n  } catch (error) {\n    var _error$response;\n    if (axios.isAxiosError(error) && ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) instanceof Blob) {\n      // Convert blob error to json\n      const text = await error.response.data.text();\n      try {\n        const json = JSON.parse(text);\n        throw new Error(json.message || 'Gagal generate surat');\n      } catch {\n        throw new Error('Gagal generate surat');\n      }\n    }\n    throw error;\n  }\n}\nexport async function uploadSuratKeluar(formData) {\n  const res = await axios.post(`${base}/upload`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return res.data;\n}\nexport async function downloadSuratKeluar(filename) {\n  // Check if download is already in progress\n  if (activeDownloads.has(filename)) {\n    throw new Error('Download sedang berlangsung');\n  }\n  try {\n    activeDownloads.add(filename);\n    const res = await axios.get(`${base}/download/${filename}`, {\n      responseType: 'blob',\n      timeout: 30000 // 30 second timeout\n    });\n    return res;\n  } catch (error) {\n    var _error$response2;\n    if (axios.isAxiosError(error) && ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) instanceof Blob) {\n      // Convert blob error to json\n      const text = await error.response.data.text();\n      try {\n        const json = JSON.parse(text);\n        throw new Error(json.message || 'Gagal download file');\n      } catch {\n        throw new Error('Gagal download file');\n      }\n    }\n    throw error;\n  } finally {\n    activeDownloads.delete(filename);\n  }\n}\n\n// Helper function to handle file downloads\nexport async function handleFileDownload(filename, customFilename) {\n  try {\n    const response = await downloadSuratKeluar(filename);\n\n    // Create blob URL\n    const blob = new Blob([response.data], {\n      type: response.headers['content-type'] || 'application/octet-stream'\n    });\n    const url = window.URL.createObjectURL(blob);\n\n    // Create temporary link and trigger download\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = customFilename || filename;\n    document.body.appendChild(link);\n    link.click();\n\n    // Cleanup\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  } catch (error) {\n    console.error('Download error:', error);\n    throw error;\n  }\n}\nexport default {\n  generateFromTemplate,\n  uploadSuratKeluar,\n  downloadSuratKeluar,\n  handleFileDownload\n};","map":{"version":3,"names":["axios","API_BASE","base","activeDownloads","Set","generateFromTemplate","formData","res","post","responseType","headers","error","_error$response","isAxiosError","response","data","Blob","text","json","JSON","parse","Error","message","uploadSuratKeluar","downloadSuratKeluar","filename","has","add","get","timeout","_error$response2","delete","handleFileDownload","customFilename","blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","console"],"sources":["C:/laragon/www/E-RAPORT-NUURUSH-SHOLAAH/e-raport-client/src/services/suratKeluarService.js"],"sourcesContent":["import axios from 'axios'\r\nimport API_BASE from '../api'\r\n\r\nconst base = `${API_BASE}/surat-keluar`;\r\n\r\n// Keep track of ongoing downloads\r\nconst activeDownloads = new Set();\r\n\r\nexport async function generateFromTemplate(formData) {\r\n  try {\r\n    const res = await axios.post(`${base}/generate-from-template`, formData, {\r\n      responseType: 'blob',\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.data instanceof Blob) {\r\n      // Convert blob error to json\r\n      const text = await error.response.data.text();\r\n      try {\r\n        const json = JSON.parse(text);\r\n        throw new Error(json.message || 'Gagal generate surat');\r\n      } catch {\r\n        throw new Error('Gagal generate surat');\r\n      }\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function uploadSuratKeluar(formData) {\r\n  const res = await axios.post(`${base}/upload`, formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  });\r\n  return res.data;\r\n}\r\n\r\nexport async function downloadSuratKeluar(filename) {\r\n  // Check if download is already in progress\r\n  if (activeDownloads.has(filename)) {\r\n    throw new Error('Download sedang berlangsung');\r\n  }\r\n\r\n  try {\r\n    activeDownloads.add(filename);\r\n    const res = await axios.get(`${base}/download/${filename}`, {\r\n      responseType: 'blob',\r\n      timeout: 30000, // 30 second timeout\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response?.data instanceof Blob) {\r\n      // Convert blob error to json\r\n      const text = await error.response.data.text();\r\n      try {\r\n        const json = JSON.parse(text);\r\n        throw new Error(json.message || 'Gagal download file');\r\n      } catch {\r\n        throw new Error('Gagal download file');\r\n      }\r\n    }\r\n    throw error;\r\n  } finally {\r\n    activeDownloads.delete(filename);\r\n  }\r\n}\r\n\r\n// Helper function to handle file downloads\r\nexport async function handleFileDownload(filename, customFilename) {\r\n  try {\r\n    const response = await downloadSuratKeluar(filename);\r\n    \r\n    // Create blob URL\r\n    const blob = new Blob([response.data], { \r\n      type: response.headers['content-type'] || 'application/octet-stream'\r\n    });\r\n    const url = window.URL.createObjectURL(blob);\r\n    \r\n    // Create temporary link and trigger download\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = customFilename || filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    \r\n    // Cleanup\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n    \r\n  } catch (error) {\r\n    console.error('Download error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default { \r\n  generateFromTemplate, \r\n  uploadSuratKeluar,\r\n  downloadSuratKeluar,\r\n  handleFileDownload\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}